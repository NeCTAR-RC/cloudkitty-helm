# Default values for cloudkitty.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

api:
  port: 8889
  command:
    - kolla_httpd_start
  apache:
    enabled: true
  image:
    repository: "registry.rc.nectar.org.au/kolla/ubuntu-source-cloudkitty-api"
  pdb:
    enabled: false
    minAvailable: 1
  replicaCount: 1
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  resources: {}
  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  gateway:
    enabled: false
    annotations: {}
    hostname: chart-example.local
    parentRefs:
      - name: default


processor:
  name: processor
  command:
    - cloudkitty-processor
  image:
    repository: "registry.rc.nectar.org.au/kolla/ubuntu-source-cloudkitty-processor"
  pdb:
    enabled: false
    minAvailable: 1
  replicaCount: 1
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  resources: {}

conf:
  debug: false
  processor:
    region_name: Other
    max_workers: 1
    coordination_url: "file:///var/lib/cloudkitty/locks"
  fetcher:
    gnocchi:
      resource_types:
      region_name: Other
      since_days_ago: 10
  keystone:
    auth_url:
    project_name: service
    username: cloudkitty
    memcached_servers: []
  storage:
    influxdb:
      username: cloudkitty
      database: cloudkitty
      host:

vault:
  role: k8s
  settings_secret: 'path/to/secret/in/vault'

job:
  db_sync:
    enabled: true
    command:
      - /usr/bin/bash
      - -c
    args:
      - "cloudkitty-dbsync upgrade; cloudkitty-storage-init"

oslo_policy:

components:
  redis: false

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "1"
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 42408
  runAsGroup: 42408
  fsGroup: 42408
  seccompProfile:
    type: RuntimeDefault

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
      - ALL
    add:
      - NET_BIND_SERVICE

service:
  type: ClusterIP

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []
